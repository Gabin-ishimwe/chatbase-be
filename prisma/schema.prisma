// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName    String
  lastName     String
  email        String
  password     String
  credits      Int       @default(20)
  openaiKey    String?
  refreshToken String?
  chatBots     Chatbot[]
  // messages     Messages[]c

  @@unique(fields: [email], name: "user_identifier")
}

model Chatbot {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  description   String?
  avatar        String    @default("https://res.cloudinary.com/dmepvxtwv/image/upload/v1682596041/avatar_image_iyomy2.png")
  fileUploads   String?
  systemPrompt  Message[]
  response      Message[]
  rateLimiting  Int?
  model         String?
  apiKey        String?
  botLink       String?
  embeddingCode String?
  isPublic      Boolean   @default(true)
  usageCredits  Int       @default(0)
  createdAt     DateTime  @default(now())
  user          User      @relation(fields: [userId], references: [id])
  userId        String    @db.ObjectId
  // Messages      Messages[]

  @@unique([name])
}

model ResetToken {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  userId   String   @db.ObjectId
  token    String
  createAt DateTime @default(now())

  @@unique([userId])
}

type Message {
  message  String
  createAt DateTime @default(now())
}

// model Messages {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   message   String
//   createdAt DateTime @default(now())
//   user      User     @relation(fields: [userId], references: [id])
//   userId    String   @db.ObjectId
//   chatbot   Chatbot  @relation(fields: [chatBotId], references: [id])
//   chatBotId String   @db.ObjectId
// }
